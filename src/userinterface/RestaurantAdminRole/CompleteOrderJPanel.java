/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.FoodDeliverySystem;
import Business.Order.Order;
import Business.Restaurant.Restaurant;
import userinterface.CustomerRole.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author akshatajadhav
 */
public class CompleteOrderJPanel extends javax.swing.JPanel {
    
    FoodDeliverySystem system;
    Restaurant restaurant;
    JLayeredPane restaurantTaskLayer;
    /**
     * Creates new form SysAdminManageCustomersJPanel
     */
    public CompleteOrderJPanel(JLayeredPane restaurantTaskLayer, FoodDeliverySystem system, Restaurant restaurant) {
        initComponents();
        this.restaurantTaskLayer=restaurantTaskLayer;
        this.system = system;
        this.restaurant = restaurant;
        tableRecordsStatus.setSize(tableRecordsStatus.getPreferredSize());
        populateTable();
    }

    public void displayRestaurantTaskPanel(JPanel panel) {
        restaurantTaskLayer.removeAll();
        restaurantTaskLayer.add(panel);
        restaurantTaskLayer.repaint();
        restaurantTaskLayer.revalidate();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableRecordsStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderCompleteTable = new javax.swing.JTable();
        orderPreparedBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        orderPreparedBtn1 = new javax.swing.JButton();

        tableRecordsStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableRecordsStatus.setText("No orders accepted!");

        setBackground(new java.awt.Color(255, 255, 255));

        orderCompleteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Status", "Items"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderCompleteTable);
        if (orderCompleteTable.getColumnModel().getColumnCount() > 0) {
            orderCompleteTable.getColumnModel().getColumn(0).setResizable(false);
            orderCompleteTable.getColumnModel().getColumn(1).setResizable(false);
            orderCompleteTable.getColumnModel().getColumn(2).setResizable(false);
        }

        orderPreparedBtn.setBackground(new java.awt.Color(92, 184, 92));
        orderPreparedBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderPreparedBtn.setForeground(new java.awt.Color(255, 255, 255));
        orderPreparedBtn.setText("Order Prepared");
        orderPreparedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderPreparedBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Order Complete!");

        orderPreparedBtn1.setBackground(new java.awt.Color(92, 184, 92));
        orderPreparedBtn1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderPreparedBtn1.setForeground(new java.awt.Color(255, 255, 255));
        orderPreparedBtn1.setText("Assign Delivery Partner");
        orderPreparedBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderPreparedBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(403, 403, 403)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orderPreparedBtn)
                .addGap(18, 18, 18)
                .addComponent(orderPreparedBtn1)
                .addGap(330, 330, 330))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderPreparedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderPreparedBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void orderPreparedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderPreparedBtnActionPerformed
        int row = orderCompleteTable.getSelectedRow();
        if(row == -1){
            JOptionPane.showMessageDialog(this, "Select a order!", "Select", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String orderId = (String) orderCompleteTable.getValueAt(row, 0);
        if(system.getOrderById(orderId).getOrderStatus().equalsIgnoreCase("Order ready to deliver")){
            JOptionPane.showMessageDialog(this, "Order already ready for delivery!", "Order Status", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        system.getOrderById(orderId).setOrderStatus("Order ready to deliver");
        populateTable();
    }//GEN-LAST:event_orderPreparedBtnActionPerformed

    private void orderPreparedBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderPreparedBtn1ActionPerformed
        int row = orderCompleteTable.getSelectedRow();
        if(row == -1){
            JOptionPane.showMessageDialog(this, "Select a order!", "Select", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String orderId = (String) orderCompleteTable.getValueAt(row, 0);
        if(!system.getOrderById(orderId).getOrderStatus().equalsIgnoreCase("Order ready to deliver")){
            JOptionPane.showMessageDialog(this, "Order not ready for delivery!", "Order Status", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        AssignDeliveryPartnerJPanel adpjp = new AssignDeliveryPartnerJPanel(restaurantTaskLayer, system, restaurant, orderId);
        displayRestaurantTaskPanel(adpjp);
    }//GEN-LAST:event_orderPreparedBtn1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderCompleteTable;
    private javax.swing.JButton orderPreparedBtn;
    private javax.swing.JButton orderPreparedBtn1;
    private javax.swing.JLabel tableRecordsStatus;
    // End of variables declaration//GEN-END:variables
    private void populateTable() {
        JTable table = orderCompleteTable;
        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    
        for (Order o : system.getOrdersByRestaurant(restaurant)) {
            if(o.getOrderStatus().equalsIgnoreCase("Order ready to deliver")){
                Object[] c = new Object[3];
                c[0] = o.getOrderId();
                c[1] = o.getOrderStatus();
                c[2] = o.getItemsAsString();
                model.addRow(c);
            }
        }
        for (Order o : system.getOrdersByRestaurant(restaurant)) {
            if(o.getOrderStatus().equalsIgnoreCase("Order Accepted")){
                Object[] c = new Object[3];
                c[0] = o.getOrderId();
                c[1] = o.getOrderStatus();
                c[2] = o.getItemsAsString();
                model.addRow(c);
            }
        }
        table.getSelectedRow();
        table.setModel(model);
        if (table.getRowCount() == 0) {
            table.add(tableRecordsStatus);
            table.setFillsViewportHeight(true);
        }
    }

}
