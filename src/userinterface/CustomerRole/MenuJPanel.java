/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.FoodDeliverySystem;
import Business.Menu.Menu;
import Business.Order.Order;
import Business.Restaurant.Restaurant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author akshatajadhav
 */
public class MenuJPanel extends javax.swing.JPanel {

    FoodDeliverySystem system;
    JLayeredPane customerTaskLayer;
    String restaurantName;
    Customer customer;
    static int count = 1;

    /**
     * Creates new form SysAdminManageCustomersJPanel
     */
    public MenuJPanel(JLayeredPane customerTaskLayer, FoodDeliverySystem system, String restaurantName, Customer customer) {
        initComponents();
        this.customerTaskLayer = customerTaskLayer;
        this.system = system;
        this.restaurantName = restaurantName;
        this.customer = customer;
        tableRecordsStatus.setSize(tableRecordsStatus.getPreferredSize());
        populateTable();
    }

    public void displayCustomerTaskPanel(JPanel panel) {
        customerTaskLayer.removeAll();
        customerTaskLayer.add(panel);
        customerTaskLayer.repaint();
        customerTaskLayer.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableRecordsStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuCardTable = new javax.swing.JTable();
        placeOrderBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tableRecordsStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableRecordsStatus.setText("No records available");

        setBackground(new java.awt.Color(255, 255, 255));

        menuCardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item", "Price", "Provide Order Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(menuCardTable);
        if (menuCardTable.getColumnModel().getColumnCount() > 0) {
            menuCardTable.getColumnModel().getColumn(0).setResizable(false);
            menuCardTable.getColumnModel().getColumn(1).setResizable(false);
            menuCardTable.getColumnModel().getColumn(2).setResizable(false);
        }

        placeOrderBtn.setBackground(new java.awt.Color(92, 184, 92));
        placeOrderBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        placeOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        placeOrderBtn.setText("Place Order!");
        placeOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Menu card");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(430, 430, 430))
            .addGroup(layout.createSequentialGroup()
                .addGap(408, 408, 408)
                .addComponent(placeOrderBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(placeOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void placeOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) menuCardTable.getModel();
        Menu m = new Menu();
        Order order = new Order();
        for (int row = 0; row < model.getRowCount(); row++) {
            int quantity = (int) model.getValueAt(row, 2);
            if (quantity > 0) {
                m.setItemName((String) model.getValueAt(row, 0));
                m.setPrice((double) model.getValueAt(row, 1));
                order.addItem(m, quantity);
            }
        }
        if(order.getItems().isEmpty()){
            JOptionPane.showMessageDialog(this, "Provide correct Quantity to place order!");
            return;
        }

        String status = "Order Placed";
        order.setCustomer(customer);
        order.setOrderId(String.valueOf(count++));
        order.setRestaurant(system.getRestaurantDirectory().getRestaurant(restaurantName));
        order.setOrderStatus(status);
        order.setAssign(false);
        order.setRequestDate(new Date());
        system.getOrderDirectory().newOrder(order);
        String orderId = order.getOrderId();
        OrderPlacedJPanel opjp = new OrderPlacedJPanel(customerTaskLayer, system, order);
        displayCustomerTaskPanel(opjp);
    }//GEN-LAST:event_placeOrderBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable menuCardTable;
    private javax.swing.JButton placeOrderBtn;
    private javax.swing.JLabel tableRecordsStatus;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        JTable table = menuCardTable;
        int rowCount = table.getRowCount();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (Menu m : system.getRestaurantDirectory().getRestaurant(restaurantName).getMenu()) {
            Object[] c = new Object[3];
            c[0] = m.getItemName();
            c[1] = m.getPrice();
            c[2] = 0;
            model.addRow(c);
        }
        table.setModel(model);
        if (table.getRowCount() == 0) {
            table.add(tableRecordsStatus);
            table.setFillsViewportHeight(true);
        }
    }
}
