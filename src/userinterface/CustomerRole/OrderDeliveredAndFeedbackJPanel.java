/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.FoodDeliverySystem;
import Business.Order.Item;
import Business.Order.Order;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import userinterface.login.LoginJPanel;

/**
 *
 * @author akshatajadhav
 */
public class OrderDeliveredAndFeedbackJPanel extends javax.swing.JPanel {
    
    FoodDeliverySystem system;
    Customer customer;
    JLayeredPane customerTaskLayer;
    List<Object> test = new ArrayList<>();
    Order order;
    int rating =0;
    /**
     * Creates new form SysAdminManageCustomersJPanel
     */
    public OrderDeliveredAndFeedbackJPanel(JLayeredPane customerTaskLayer, FoodDeliverySystem system, Customer customer, Order order) {
        initComponents();
        this.customerTaskLayer=customerTaskLayer;
        this.system = system;
        this.customer = customer;
        this.order = order;
//        URL url = this.getClass().getResource("/resources/orderOnTheWay.gif");
//        Icon myImgIcon = new ImageIcon(url);
        createInvoice();
       
    }

    public void displayCustomerTaskPanel(JPanel panel) {
        customerTaskLayer.removeAll();
        customerTaskLayer.add(panel);
        customerTaskLayer.repaint();
        customerTaskLayer.revalidate();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoicePane = new javax.swing.JEditorPane();
        jLabel3 = new javax.swing.JLabel();
        userFeedback = new javax.swing.JLabel();
        submitButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        feedbackTextArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Order Delivered!");

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setViewportView(invoicePane);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("**RATING**");

        userFeedback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/star0.png"))); // NOI18N
        userFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userFeedbackMouseClicked(evt);
            }
        });

        submitButton1.setBackground(new java.awt.Color(92, 184, 92));
        submitButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        submitButton1.setForeground(new java.awt.Color(255, 255, 255));
        submitButton1.setText("SUBMIT");
        submitButton1.setBorder(null);
        submitButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButton1ActionPerformed(evt);
            }
        });

        feedbackTextArea.setColumns(20);
        feedbackTextArea.setRows(5);
        feedbackTextArea.setText("Please provide feedback!");
        feedbackTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbackTextAreaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(feedbackTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(submitButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(userFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(106, 106, 106))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(184, 184, 184))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(userFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(submitButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButton1ActionPerformed
        String feedback = feedbackTextArea.getText();
        if(feedback.equalsIgnoreCase("Please provide feedback!") || feedback.isEmpty()){
            JOptionPane.showMessageDialog(this, "Provide feedback!");
            return;            
        }
        if(rating == 0){
            JOptionPane.showMessageDialog(this, "Provide rating!");
            return;            
        }
        order.setRating(rating);
        system.getOrderById(order.getOrderId()).setRating(rating);
        system.getOrderById(order.getOrderId()).setFeedback(feedback);
        system.getOrderById(order.getOrderId()).setOrderStatus("Complete");
        system.getOrderById(order.getOrderId()).setResolveDate(new Date());
        ListRestaurantsJPanel lrjp = new ListRestaurantsJPanel(customerTaskLayer, system, customer);
        displayCustomerTaskPanel(lrjp);
    }//GEN-LAST:event_submitButton1ActionPerformed

    private void userFeedbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userFeedbackMouseClicked
        int x = (int) evt.getPoint().getX();
        rating = x/46+1;
        String stars = "/resources/star"+(rating)+".png";
        userFeedback.setIcon(new ImageIcon(getClass().getResource(stars)));
        if(rating>5){
            rating=5;
        }
    }//GEN-LAST:event_userFeedbackMouseClicked

    private void feedbackTextAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackTextAreaMouseClicked
        if(feedbackTextArea.getText().equals("Please provide feedback!")){
            feedbackTextArea.setText("");
        }
    }//GEN-LAST:event_feedbackTextAreaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea feedbackTextArea;
    private javax.swing.JEditorPane invoicePane;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton submitButton1;
    private javax.swing.JLabel userFeedback;
    // End of variables declaration//GEN-END:variables
    public void createInvoice(){
        String invoiceHeading="\t\tInovice\n";
        String line="------------------------------------------------------------------------------------------\n";
        String invoiceDate="Created: "+order.getRequestDate()+"\n";
        String retaurantDetails=order.getRestaurant().getRestaurantName()+"\n"+order.getRestaurant().getAddress()+"\n";
        String personDetails=order.getCustomer().getName()+"\n"+order.getCustomer().getEmail()+"\n"+order.getCustomer().getHomeAddress()+"\n";
        String items="Item                            Price\n"+line;
        for(Item item : order.getItems()){
            items+=item.getItemName()+"                            "+"$"+item.getPrice()+"\n";
        }
        String endTags="                                   $"+order.getTotal()+"\n";
        String invoice="";                
        invoice+=invoiceHeading+line+invoiceDate+line+
                retaurantDetails+line+personDetails+line+items+line+endTags+line;
        invoicePane.setText(invoice);
        
    }

}
